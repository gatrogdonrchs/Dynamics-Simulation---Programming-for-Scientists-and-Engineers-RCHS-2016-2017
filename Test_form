canvas_destroyallballs_button ''
canvas_createball_button ''
canvas_createball_button ''

disk1 =: 0 { widgetlist_disk_
setposition__disk1  200 500
setvelocity__disk1  0 _5
setrotation__disk1  0
setavelocity__disk1  0
setmass__disk1  1

disk2 =: 1 { widgetlist_disk_
setposition__disk2  200 200
setvelocity__disk2  0 2
setrotation__disk2  0
setavelocity__disk2  0
setmass__disk2  1


disk_disk2 =: monad define
disk1 =: 0 { y
disk2 =: 1 { y

xy1 =: getposition__disk1 ''
x1 =: 0 { xy1
y1 =: 1 { xy1
xy2 =: getposition__disk2 ''
x2 =: 0 { xy2
y2 =: 1 { xy2
v1 =: getvelocity__disk1 ''

v2 =: getvelocity__disk2 ''

m1 =: getmass__disk1 ''
m2 =: getmass__disk2 ''

dy =: y1 - y2
dx =: x1 - x2
angle =: _3 o. dy % dx

v1r =: (angle ) shift_forward v1
v1x =: 0 { ,v1r
v1y =: 1 { ,v1r
v2r =: ( angle ) shift_forward v2 
v2x =: 0 { ,v2r
v2y =: 1 { ,v2r


v1xf =: (((m1 - m2) % (m1 + m2)) * v1x ) + (((2 * m2) % (m1 + m2)) * v2x)
v2xf =: (((2 * m1) % (m1 + m2)) * v1x ) - (((m1 - m2) % (m1 + m2)) * v2x)

invert =: _1 * angle
v1f =:  angle shift_back v1xf , v1y
v2f =: (angle + 1p1) shift_back v2xf , v2y

setvelocity__disk1 ,v1f
setvelocity__disk2 ,v2f
)


shift_forward =: dyad define

NB. disk1 =: [wpw1] { widgetlist_widget_
NB. disk2 =: [wpw2] { widgetlist_widget_
NB. wpw means position of widget in collision with respect to widgetlist_widget_


rotation =: x NB. getrotation__rect1''
vector =: y
hyp =: %:(+/ (vector^2))

angle12 =:  rotation

shiftedvelocity =: (hyp * (2&o.angle12)),(hyp * (1&o.angle12))
NB. the shifted coordinate system. 

 shiftedvelocity

)


shift_back =: dyad define
 
  
rotation =: x
velocity2 =: y
value =: (1 { velocity2) % ( _1 * ( 1 { velocity2))
angle2 =: (1p1%2) - (rotation+ 1p1%4)

veloc =: %:(+/(velocity2^2))
shiftback =: (veloc * (1&o.angle2)),(veloc * (2&o.angle2)) * ( _1 *value)
NB. the shifted coordinate system. 
 shiftback
)
